name: Deploy Flask API

on:
  push:
    branches: [ "main" ]  # Mỗi lần push lên main sẽ tự động deploy

env:
  AZURE_CONTAINER_REGISTRY: acr123456789.azurecr.io
  IMAGE_NAME: flask-api
  CONTAINER_APP_NAME: flask-api-app
  RESOURCE_GROUP: study_resource_group

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}  # từ Service Principal

    - name: Login to ACR
      run: az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Deploy to Azure Container App
      run: |
        az containerapp update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --image ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Wait for container app to be ready
      run: sleep 15  # hoặc dùng loop ping nếu cần chắc chắn

    - name: Test root endpoint
      run: curl -f https://${{ env.CONTAINER_APP_NAME }}.azurecontainerapps.io/

    - name: Test about endpoint
      run: curl -f https://${{ env.CONTAINER_APP_NAME }}.azurecontainerapps.io/about
  
    - name: Test API endpoint
      run: |
        curl -f https://${{ env.CONTAINER_APP_NAME }}.azurecontainerapps.io/health

    - name: Wait for api call completed
      run: sleep 15  # hoặc dùng loop ping nếu cần chắc chắn
      
    - name: Clean up container app sau khi test
      run: |
        az containerapp delete \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --yes
          
    - name: Delete old images (optional)
      run: |
        az acr repository delete \
          --name ${{ env.AZURE_CONTAINER_REGISTRY }} \
          --repository ${{ env.IMAGE_NAME }} \
          --yes

